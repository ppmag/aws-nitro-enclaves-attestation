
[workspace]
members = [ ".", "ffi" ]
default-members = [ ".", "ffi" ]

[profile.release]
lto = true
panic = "abort"

[package]
name = "aws-nitro-enclaves-attestation"
version = "0.1.0"
authors = ["ppmag <mybestexpert@gmail.com>"]
edition = "2018"
license = "Apache-2.0"
description = "Attestation primitives library (for C/C++ bindings) for use in AWS Nitro Enclave applications."
homepage = "https://github.com/ppmag/aws-nitro-enclaves-attestation"
repository = "https://github.com/ppmag/aws-nitro-enclaves-attestation"
readme = "README.md"
keywords = ["aws", "amazon", "enclave", "nitro", "attestation"]
categories = ["development-tools::ffi", "hardware-support", "parser-implementations", "cryptography"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
aws-nitro-enclaves-cose = "0.1.0"

itertools = "0.10.3"

serde = { version = "1.0", default-features = false, features = ["derive"] }
serde_cbor = { version = "0.11.1", default-features = false }
serde_bytes = "0.11.5"
serde_repr = "0.1.6"
serde_json = "1.0.64"
serde_with = { version = "1.7.0", features = ["hex"] }

openssl = { version = "0.10", features = ["vendored"] }
chrono = { path="src/external/chrono", features = ["serde"] } # [TODO]: use rust crate from cargo instead of source code... But now it fails to build to wasm, even though the same version is beeing used
hex = "0.4.3"
x509-parser = "0.9.1"

[target.'cfg(not(target_arch = "wasm32" ))'.dependencies]
webpki = "0.21.4"

[features]
openssl_native = []